package harness

import (
	"log"

	"gopkg.in/yaml.v2"
)

type Environment struct {
	Status        string          `json:"status"`
	Data          EnvironmentData `json:"data"`
	MetaData      interface{}     `json:"metaData"`
	CorrelationID string          `json:"correlationId"`
}

type EnvironmentData struct {
	TotalPages    int64                `json:"totalPages"`
	TotalItems    int64                `json:"totalItems"`
	PageItemCount int64                `json:"pageItemCount"`
	PageSize      int64                `json:"pageSize"`
	Content       []EnvironmentContent `json:"content"`
	PageIndex     int64                `json:"pageIndex"`
	Empty         bool                 `json:"empty"`
	PageToken     interface{}          `json:"pageToken"`
}

type EnvironmentContent struct {
	Environment    EnvironmentClass `json:"environment"`
	CreatedAt      int64            `json:"createdAt"`
	LastModifiedAt int64            `json:"lastModifiedAt"`
}

type EnvironmentClass struct {
	AccountID         string          `json:"accountId"`
	OrgIdentifier     string          `json:"orgIdentifier"`
	ProjectIdentifier string          `json:"projectIdentifier"`
	Identifier        string          `json:"identifier"`
	Name              string          `json:"name"`
	Description       string          `json:"description"`
	Color             string          `json:"color"`
	Type              string          `json:"type"`
	Deleted           bool            `json:"deleted"`
	Tags              EnvironmentTags `json:"tags"`
	YAML              string          `json:"yaml"`
}

type EnvironmentTags struct {
}

type EnvironmentYaml struct {
}

type EnvironmentRequest struct {
	OrgIdentifier         string `json:"orgIdentifier"`
	ProjectIdentifier     string `json:"projectIdentifier"`
	EnvironmentIdentifier string `json:"environmentIdentifier"`
	ServiceIdentifier     string `json:"serviceIdentifier"`
	YAML                  string `json:"yaml"`
}

// Generated by https://quicktype.io

type ServiceOverride struct {
	Status        string              `json:"status"`
	Data          ServiceOverrideData `json:"data"`
	MetaData      interface{}         `json:"metaData"`
	CorrelationID string              `json:"correlationId"`
}

type ServiceOverrideData struct {
	TotalPages    int64                    `json:"totalPages"`
	TotalItems    int64                    `json:"totalItems"`
	PageItemCount int64                    `json:"pageItemCount"`
	PageSize      int64                    `json:"pageSize"`
	Content       []ServiceOverrideContent `json:"content"`
	PageIndex     int64                    `json:"pageIndex"`
	Empty         bool                     `json:"empty"`
	PageToken     interface{}              `json:"pageToken"`
}

type ServiceOverrideContent struct {
	AccountID         string `json:"accountId"`
	OrgIdentifier     string `json:"orgIdentifier"`
	ProjectIdentifier string `json:"projectIdentifier"`
	EnvironmentRef    string `json:"environmentRef"`
	ServiceRef        string `json:"serviceRef"`
	YAML              string `json:"yaml"`
}

func (env *EnvironmentClass) ParseYAML() (*EnvironmentYaml, error) {
	envYaml := &EnvironmentYaml{}
	err := yaml.Unmarshal([]byte(env.YAML), &envYaml)
	if err != nil {
		log.Fatalf("Unmarshal: %v", err)
	}

	return envYaml, nil
}

func (env *EnvironmentClass) UpdateEnvironment(api *APIRequest) error {
	enviroment := &EnvironmentRequest{}
	err := api.UpdateEnvironment(*enviroment, env.AccountID)
	if err != nil {
		return err
	}
	return nil
}
